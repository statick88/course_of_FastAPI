# Introducción a FastAPI

:::{.center}
![FastAPI](../../logo.png){width=200px}
:::

## ¿Qué es FastAPI?

FastAPI es un framework web moderno y rápido para crear APIs con Python 3.6+ basado en estándares abiertos y estándares de tipo de datos Python. Es muy rápido (alto rendimiento) gracias a Starlette y Pydantic. Es fácil de aprender y usar, y también es rápido en la ejecución.

## ¿Por qué usar FastAPI?

- **Rápido**: Muy alto rendimiento, en par con NodeJS y Go (gracias a Starlette y Pydantic). Uno de los frameworks web más rápidos disponibles.

- **Rápido para escribir**: Aumenta la velocidad para escribir APIs web en comparación con otros frameworks, como Flask y Django.

- **Menos errores**: Reduce los errores de código (gracias a la comprobación estática de tipos Python).

- **Menos tiempo de depuración**: Reduce el tiempo de depuración con un sistema de comprobación estática de tipos Python.

- **Integración con Swagger UI**: Todos los endpoints automáticamente documentados con Swagger UI y Redoc.

- **Fácil de aprender**: Diseñado para ser fácil de aprender y usar. Menos tiempo leyendo documentación.

## ¿Cómo instalar FastAPI?

Para instalar FastAPI, simplemente ejecuta el siguiente comando:

```bash
pyton -m venv env
```

```bash
source env/bin/activate
```

```bash
pip install fastapi
```

```bash
pip install uvicorn
```

## ¿Cómo ejecutar FastAPI?

Para ejecutar FastAPI, simplemente ejecuta el siguiente comando:

```bash
uvicorn main:app --reload
```

Donde **main** es el nombre del archivo principal de tu aplicación y **app** es la instancia de FastAPI.

## ¿Cómo probar FastAPI?

Para probar FastAPI, simplemente abre tu navegador y navega a la siguiente URL: <http://127.0.0.1:8000>

## ¿Cómo probar la documentación de FastAPI?

Para probar la documentación de FastAPI, simplemente abre tu navegador y navega a la siguiente URL: <http://127.0.0.1:8000/docs> o <http://127.0.0.1:8000/redoc>

## ¿Cómo crear una API con FastAPI?

Para crear una API con FastAPI, simplemente crea un archivo Python con el siguiente contenido:

```python
from fastapi import FastAPI

app = FastAPI()

@app.get("/")
def read_root():
    return {"Hello": "World"}
```

Guarda el archivo con el nombre **main.py** y ejecuta el siguiente comando:

```bash
uvicorn main:app --reload
```

## ¿Cómo probar una API con FastAPI?

Para probar una API con FastAPI, simplemente abre tu navegador y navega a la siguiente URL: <http://127.0.0.1:8000> y verás el siguiente resultado:

```json
{"Hello": "World"}
```

## ¿Cómo documentar una API con FastAPI?

Para documentar una API con FastAPI, simplemente abre tu navegador y navega a la siguiente URL: <http://127.0.0.1:8000/docs> o <http://127.0.0.1:8000/redoc> y verás la documentación de tu API.

# ¿Qué sigue?

En la siguiente lección, aprenderemos cómo crear una API RESTful con FastAPI.

:::{.callout-tip}
Para más información, visita la documentación oficial de [FastAPI](https://fastapi.tiangolo.com/).
:::

:::{.center}
¡Hora de practicar!
:::

[Prueba tu conocimiento](1_intro_quiz.qmd)
